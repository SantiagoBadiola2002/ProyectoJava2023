
package presentacion;


import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.DTActividad;
import logica.DTSalidaTuristica;
import logica.DTTurista;
import logica.IControlador;
import logica.TipoPago;


/**
 *
 * @author Pc
 */
public class InscripcionASalidaTuristica extends javax.swing.JInternalFrame {
    private IControlador control;
     private DefaultTableModel tabla = new DefaultTableModel(){
            //que filas y columnas no sean editables
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            };
        };
     /**
     * Creates new form InscripciónASalidaTurística
     */
    public InscripcionASalidaTuristica(IControlador icu) {
        control = icu;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbmes = new javax.swing.JSpinner();
        cmbDepartamento = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbActividad = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbTurista = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        aceptarInscripcionSalida = new javax.swing.JButton();
        cancelarInscripcionSalida = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaSalidas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        spnDia = new javax.swing.JSpinner();
        spnMes = new javax.swing.JSpinner();
        spnAnio = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombreTurista = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        spnCantidad = new javax.swing.JSpinner();
        txtCosto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        cmbmes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        setClosable(true);
        setTitle("Inscripción A Salida Turística");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        cmbDepartamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDepartamentoItemStateChanged(evt);
            }
        });

        jLabel3.setText("Departamento");

        cmbActividad.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbActividadItemStateChanged(evt);
            }
        });
        cmbActividad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbActividadActionPerformed(evt);
            }
        });

        jLabel8.setText("Actividades Turisticas");

        jLabel4.setText("Datos:");

        cmbTurista.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTuristaItemStateChanged(evt);
            }
        });

        jLabel5.setText("Turista");

        txtCorreo.setEditable(false);

        aceptarInscripcionSalida.setText("Aceptar");
        aceptarInscripcionSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarInscripcionSalidaActionPerformed(evt);
            }
        });

        cancelarInscripcionSalida.setText("Cancelar");
        cancelarInscripcionSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarInscripcionSalidaActionPerformed(evt);
            }
        });

        tablaSalidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaSalidas);

        jLabel1.setText("Cantidad de Turistas:");

        spnDia.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        spnMes.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        spnAnio.setModel(new javax.swing.SpinnerNumberModel(1900, 1900, 2023, 1));

        jLabel6.setText("Año:");

        jLabel7.setText("Mes:");

        jLabel9.setText("Dia:");

        txtNombreTurista.setEditable(false);

        txtApellido.setEditable(false);

        spnCantidad.setModel(new javax.swing.SpinnerNumberModel());

        jLabel2.setText("Costo Insc.:");

        jLabel10.setText("Fecha Insc.:");

        jLabel11.setText("Salidas Turisticas Disponibles:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(aceptarInscripcionSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(120, 120, 120)
                                    .addComponent(cancelarInscripcionSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(32, 32, 32)
                                    .addComponent(jLabel9)
                                    .addGap(18, 18, 18)
                                    .addComponent(spnDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel7)
                                    .addGap(18, 18, 18)
                                    .addComponent(spnMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(spnAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel3))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbDepartamento, 0, 257, Short.MAX_VALUE)
                                    .addComponent(cmbActividad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(30, 30, 30)
                                .addComponent(cmbTurista, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(12, 12, 12)
                                .addComponent(txtNombreTurista, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel11))
                        .addGap(0, 39, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbDepartamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cmbActividad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbTurista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreTurista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(spnDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(spnMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(spnAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(spnCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aceptarInscripcionSalida)
                    .addComponent(cancelarInscripcionSalida))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbDepartamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDepartamentoItemStateChanged
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaSalidas.getModel();
        modeloTabla.setRowCount(0);
        if (cmbDepartamento.getItemCount()>0){
            cmbActividad.removeAllItems();
            ArrayList<DTActividad> listaActividadesDepto = control.encontraActividadDepartamento((String)cmbDepartamento.getSelectedItem());
                   
            for (DTActividad a : listaActividadesDepto){
                cmbActividad.addItem(a.getNombre());
            }
        }
              
        
    }//GEN-LAST:event_cmbDepartamentoItemStateChanged
    private void cargarSalidas(String actividad){
        //carga de los datos desde la BD
        //salidas = actividades.get(cmbActividad.getSelectedIndex()).getListaSalidaTuristica();
        String titulos[] = {"Nombre", "Capacidad", "Fecha Alta", "Fecha Salida", "Lugar"};
        
        tabla.setColumnIdentifiers(titulos);
        
        
        ArrayList<DTSalidaTuristica> listaSalidasDeActividad = control.encontraSalidasTuristicasDeActividad(actividad);
        
        tabla.setRowCount(0);
        
        for (DTSalidaTuristica st : listaSalidasDeActividad) {
            Object[] fila = {st.getNombre(),st.getCantMax(),st.getfAlta(), st.getfSalida(), st.getLugar()}; // Ajusta esto según las propiedades de DTSalidaTuristica

            tabla.addRow(fila);
        }
        tablaSalidas.setModel(tabla);
        
        
        
        
        
    }
    private void cmbTuristaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTuristaItemStateChanged
        // TODO add your handling code here:
        DTTurista dtTurista = control.traerDTTurista((String) cmbTurista.getSelectedItem());
        
        if(dtTurista != null){
            txtNombreTurista.setText(dtTurista.getNombre());
            txtApellido.setText(dtTurista.getApellido());
            txtCorreo.setText(dtTurista.getCorreo());
            //scrFecha.setValue(dtTurista.getfNacimiento());
        }
    }//GEN-LAST:event_cmbTuristaItemStateChanged

    private void cmbActividadItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbActividadItemStateChanged
        // TODO add your handling code here:
        if(cmbActividad.getItemCount()>0)
            cargarSalidas((String) cmbActividad.getSelectedItem());
        
    }//GEN-LAST:event_cmbActividadItemStateChanged
   
    private void aceptarInscripcionSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarInscripcionSalidaActionPerformed
        //tengo turista 
        if (cmbTurista.getSelectedIndex() != -1) {
            //se selecciono una salida turistica
            if (tablaSalidas.getRowCount() > 0) {
                if (tablaSalidas.getSelectedRow() != -1) {
                    if ((Integer) spnCantidad.getValue() > 0) {
                        //controlo que cant a inscribir no supere al max cant de la salida
                        String nombreSalidaSeleccionada = String.valueOf(tablaSalidas.getValueAt(tablaSalidas.getSelectedRow(), 0));
                        int cantidadTurista = (Integer) spnCantidad.getValue();
                        if (!control.salidaTuristicaLlena(nombreSalidaSeleccionada, cantidadTurista)) {
                            //controlo que el turista no este inscripto a la salida
                            String nicknameTurista = (String) cmbTurista.getSelectedItem();
                            //DTSalidaTuristica dtSalida = control.traerDTSalidaTuristica( nombreSalidaSeleccionada);

                            if (!control.turistaYaInscriptoSalidaTuristica(nombreSalidaSeleccionada, nicknameTurista)) {
                                try {
                                    int costo = cantidadTurista * Integer.parseInt(txtCosto.getText());
                                    //System.out.println("llegue hasta aca");
                                    int dia = (int) spnDia.getValue();
                                    int mes = (int) spnMes.getValue();
                                    int anio = (int) spnAnio.getValue();
                                    Calendar calendar = Calendar.getInstance();
                                    calendar.set(anio, mes - 1, dia); // El mes se cuenta desde 0 (enero) a 11 (diciembre)
                                    Date fecha = calendar.getTime();
                                    TipoPago pago = TipoPago.general;

                                    control.InscripcionASalidaTuristica(nombreSalidaSeleccionada, nicknameTurista, cantidadTurista, costo, fecha, pago);

                                    mostrsarMensaje("Incripcion realizada", "Info", "Inscripcion realizada con exito");
                                } catch (NumberFormatException ex) {
                                    JOptionPane.showMessageDialog(null, "Costo tiene que ser un numero", "Error", JOptionPane.ERROR_MESSAGE);

                                } catch (Exception ex) {
                                    JOptionPane.showMessageDialog(null, "Error al realizar la inscripcion", "Error", JOptionPane.ERROR_MESSAGE);
                                }
                            } else {
                                mostrsarMensaje("Turista ya inscripto a la salida turistica", "Error", "Error al ingresar Inscripcion");
                            }

                        } else {
                            mostrsarMensaje("Cantidad de turistas supera la cantidad max de la salida", "Error", "Error al ingresar Inscripcion");
                        }

                    } else {
                        mostrsarMensaje("Cantidad de inscriptos debe ser mayor a cero", "Error", "Error al ingresar Inscripcion");
                    }
                } else {
                    mostrsarMensaje("No ha seleccionado ninguna salidas turisticas", "Error", "Error al ingresar Inscripcion");
                }
            } else {
                mostrsarMensaje("No hay salidas turisticas para la actividad", "Error", "Error al ingresar Inscripcion");
            }
        } else {
            mostrsarMensaje("No se selecciono ningun turista", "Error", "Error al ingresar Inscripcion");
        }


    }//GEN-LAST:event_aceptarInscripcionSalidaActionPerformed

    private void cmbActividadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbActividadActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbActividadActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
 
        cmbDepartamento.removeAllItems();
        // Llamar a obtenerNombresDepartamentos para obtener la lista de nombres de departamentos y llenar el cmboBoxDep
         List<String> nombresDepartamentos = control.listaDeptos();
        // Llenar el JComboBox con los nombres de los departamentos
         for (String nombre : nombresDepartamentos) {
             cmbDepartamento.addItem(nombre);
        }
        
        if (cmbDepartamento.getItemCount()>0){
            //cmbActividad.removeAllItems();
            ArrayList<DTActividad> listaActividadesDepto = control.encontraActividadDepartamento((String)cmbDepartamento.getSelectedItem());
                   
            for (DTActividad a : listaActividadesDepto){
                cmbActividad.addItem(a.getNombre());
            }
        } 
         
        //cmbTurista.removeAllItems();
        ArrayList<DTTurista> listaTuristas = control.traerUsuarioTurista();
         for (DTTurista dtTurista : listaTuristas) {
             cmbTurista.addItem(dtTurista.getNickname());
        }
        
        
        if(cmbActividad.getItemCount()>0)
            cargarSalidas((String) cmbActividad.getSelectedItem());
        
    }//GEN-LAST:event_formInternalFrameOpened

    private void cancelarInscripcionSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarInscripcionSalidaActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelarInscripcionSalidaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aceptarInscripcionSalida;
    private javax.swing.JButton cancelarInscripcionSalida;
    private javax.swing.JComboBox<String> cmbActividad;
    private javax.swing.JComboBox<String> cmbDepartamento;
    private javax.swing.JComboBox<String> cmbTurista;
    private javax.swing.JSpinner cmbmes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spnAnio;
    private javax.swing.JSpinner spnCantidad;
    private javax.swing.JSpinner spnDia;
    private javax.swing.JSpinner spnMes;
    private javax.swing.JTable tablaSalidas;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtNombreTurista;
    // End of variables declaration//GEN-END:variables

    public void mostrsarMensaje(String mensaje, String tipo, String titulo){
        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("Info")){
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        }else if (tipo.equals("Error")){
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);
    
    }



}
